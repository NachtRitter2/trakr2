"""location, sensor, reading tables

Revision ID: 31a0a409bafa
Revises: 2e139e847983
Create Date: 2023-07-10 22:29:37.601365

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '31a0a409bafa'
down_revision = '2e139e847983'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=140), nullable=True),
    sa.Column('isObsolete', sa.Boolean(), nullable=True),
    sa.Column('updatedDtm', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['updatedBy'], ['user.username'], ),
    sa.PrimaryKeyConstraint('name')
    )
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_name'), ['name'], unique=True)

    op.create_table('sensor',
    sa.Column('sensorSerialNr', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('sensorType', sa.String(length=64), nullable=True),
    sa.Column('lowerLimit', sa.Integer(), nullable=True),
    sa.Column('upperLimit', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('updatedDtm', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['location'], ['location.name'], ),
    sa.ForeignKeyConstraint(['updatedBy'], ['user.username'], ),
    sa.PrimaryKeyConstraint('sensorSerialNr')
    )
    op.create_table('reading',
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('sensorSerialNr', sa.Integer(), nullable=False),
    sa.Column('readingDtm', sa.DateTime(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['location'], ['location.name'], ),
    sa.ForeignKeyConstraint(['sensorSerialNr'], ['sensor.sensorSerialNr'], ),
    sa.PrimaryKeyConstraint('sensorSerialNr', 'readingDtm')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reading')
    op.drop_table('sensor')
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_name'))

    op.drop_table('location')
    # ### end Alembic commands ###
